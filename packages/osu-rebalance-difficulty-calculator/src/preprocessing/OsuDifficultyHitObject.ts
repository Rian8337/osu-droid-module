import { Modes } from "@rian8337/osu-base";
import { DifficultyHitObject } from "./DifficultyHitObject";

/**
 * Represents an osu!standard hit object with difficulty calculation values.
 */
export class OsuDifficultyHitObject extends DifficultyHitObject {
    /**
     * The speed strain generated by the hitobject.
     */
    speedStrain: number = 0;

    /**
     * The flashlight strain generated by this hitobject.
     */
    flashlightStrain: number = 0;

    private readonly radiusBuffThreshold = 30;

    protected override readonly mode = Modes.osu;
    protected override get scalingFactor() {
        const radius = this.object.getRadius(this.mode);

        // We will scale distances by this factor, so we can assume a uniform CircleSize among beatmaps.
        let scalingFactor = this.normalizedRadius / radius;

        // High circle size (small CS) bonus
        if (radius < this.radiusBuffThreshold) {
            scalingFactor *=
                1 + Math.min(this.radiusBuffThreshold - radius, 5) / 50;
        }

        return scalingFactor;
    }
}
